{
  "v1": {
    "config": {},
    "helmValues": "## Global Docker image registry\n## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value\n##\n# global:\n#   imageRegistry:\n\n## Bitnami Redis image version\n## ref: https://hub.docker.com/r/bitnami/redis/tags/\n##\nimage:\n  registry: docker.io\n  repository: bitnami/redis\n  ## Bitnami Redis image tag\n  ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links\n  ##\n  tag: 4.0.11\n  ## Specify a imagePullPolicy\n  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: Always\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  # pullSecrets:\n  #   - myRegistrKeySecretName\n\n## Cluster settings\ncluster:\n  enabled: true\n  slaveCount: 1\n\nnetworkPolicy:\n  ## Specifies whether a NetworkPolicy should be created\n  ##\n  enabled: false\n\n  ## The Policy model to apply. When set to false, only pods with the correct\n  ## client label will have network access to the port Redis is listening\n  ## on. When true, Redis will accept connections from any source\n  ## (with the correct destination port).\n  ##\n  # allowExternal: true\n\nserviceAccount:\n  ## Specifies whether a ServiceAccount should be created\n  ##\n  create: false\n  ## The name of the ServiceAccount to use.\n  ## If not set and create is true, a name is generated using the fullname template\n  name:\n\nrbac:\n  ## Specifies whether RBAC resources should be created\n  ##\n  create: false\n\n  role:\n    ## Rules to create. It follows the role specification\n    # rules:\n    #  - apiGroups:\n    #    - extensions\n    #    resources:\n    #      - podsecuritypolicies\n    #    verbs:\n    #      - use\n    #    resourceNames:\n    #      - gce.unprivileged\n    rules: []\n\n## Use password authentication\nusePassword: true\n## Redis password (both master and slave)\n## Defaults to a random 10-character alphanumeric string if not set and usePassword is true\n## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run\n##\npassword:\n## Use existing secret (ignores previous password)\n# existingSecret:\n\n## Persist data to a persistent volume\npersistence: {}\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  # existingClaim:\n\n##\n## Redis Master parameters\n##\nmaster:\n  ## Redis port\n  port: 6379\n  ## Redis command arguments\n  ##\n  ## Can be used to specify command line arguments, for example:\n  ##\n  command:\n  - \"/run.sh\"\n  ## Redis additional command line flags\n  ##\n  ## Can be used to specify command line flags, for example:\n  ##\n  ## extraFlags:\n  ##  - \"--maxmemory-policy volatile-ttl\"\n  ##  - \"--repl-backlog-size 1024mb\"\n  extraFlags: []\n  ## Comma-separated list of Redis commands to disable\n  ##\n  ## Can be used to disable Redis commands for security reasons.\n  ## Commands will be completely disabled by renaming each to an empty string.\n  ## ref: https://redis.io/topics/security#disabling-of-specific-commands\n  ##\n  disableCommands:\n  - FLUSHDB\n  - FLUSHALL\n\n  ## Redis Master additional pod labels and annotations\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  podLabels: {}\n  podAnnotations: {}\n\n  ## Redis Master resource requests and limits\n  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n  # resources:\n  #   requests:\n  #     memory: 256Mi\n  #     cpu: 100m\n  ## Use an alternate scheduler, e.g. \"stork\".\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  # schedulerName:\n\n  ## Configure extra options for Redis Master liveness and readiness probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 5\n    timeoutSeconds: 5\n    successThreshold: 1\n    failureThreshold: 5\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 5\n    timeoutSeconds: 1\n    successThreshold: 1\n    failureThreshold: 5\n\n  ## Redis Master Node selectors and tolerations for pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature\n  ##\n  # nodeSelector: {\"beta.kubernetes.io/arch\": \"amd64\"}\n  # tolerations: []\n  ## Redis Master pod/node affinity/anti-affinity\n  ##\n  affinity: {}\n\n  ## Redis Master Service properties\n  service:\n    ##  Redis Master Service type\n    type: ClusterIP\n    port: 6379\n\n    ## Specify the nodePort value for the LoadBalancer and NodePort service types.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n    ##\n    # nodePort:\n\n    ## Provide any additional annotations which may be required. This can be used to\n    ## set the LoadBalancer service type to internal only.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n    ##\n    annotations: {}\n    loadBalancerIP:\n\n  ## Redis Master Pod Security Context\n  securityContext:\n    enabled: true\n    fsGroup: 1001\n    runAsUser: 1001\n\n  ## Enable persistence using Persistent Volume Claims\n  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n  ##\n  persistence:\n    enabled: true\n    ## The path the volume will be mounted at, useful when using different\n    ## Redis images.\n    path: /data\n    ## The subdirectory of the volume to mount to, useful in dev environments\n    ## and one PV for multiple services.\n    subPath: \"\"\n    ## redis data Persistent Volume Storage Class\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n    ##   GKE, AWS \u0026 OpenStack)\n    ##\n    # storageClass: \"-\"\n    accessModes:\n    - ReadWriteOnce\n    size: 8Gi\n\n  ## Update strategy, can be set to RollingUpdate or onDelete by default.\n  ## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets\n  statefulset:\n    updateStrategy: RollingUpdate\n    ## Partition update strategy\n    ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions\n    # rollingUpdatePartition:\n\n\n##\n## Redis Slave properties\n## Note: service.type is a mandatory parameter\n## The rest of the parameters are either optional or, if undefined, will inherit those declared in Redis Master\n##\nslave:\n  ## Slave Service properties\n  service:\n    ## Redis Slave Service type\n    type: ClusterIP\n    ## Specify the nodePort value for the LoadBalancer and NodePort service types.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n    ##\n    # nodePort:\n\n    ## Provide any additional annotations which may be required. This can be used to\n    ## set the LoadBalancer service type to internal only.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n    ##\n    annotations: {}\n    loadBalancerIP:\n\n  ## Redis port\n  # port: 6379\n  ## Redis extra flags\n  # extraFlags: []\n  ## List of Redis commands to disable\n  # disableCommands: []\n\n  ## Redis Slave pod/node affinity/anti-affinity\n  ##\n  affinity: {}\n\n  ## Configure extra options for Redis Slave liveness and readiness probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\n  ##\n  # livenessProbe:\n  #   enabled: true\n  #   initialDelaySeconds: 30\n  #   periodSeconds: 10\n  #   timeoutSeconds: 5\n  #   successThreshold: 1\n  #   failureThreshold: 5\n  # readinessProbe:\n  #   enabled: true\n  #   initialDelaySeconds: 5\n  #   periodSeconds: 10\n  #   timeoutSeconds: 10\n  #   successThreshold: 1\n  #   failureThreshold: 5\n\n  ## Redis slave Resource\n  # resources:\n  #   requests:\n  #     memory: 256Mi\n  #     cpu: 100m\n\n  ## Redis slave selectors and tolerations for pod assignment\n  # nodeSelector: {\"beta.kubernetes.io/arch\": \"amd64\"}\n  # tolerations: []\n\n  ## Use an alternate scheduler, e.g. \"stork\".\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  # schedulerName:\n\n  ## Redis slave pod Annotation and Labels\n  # podLabels: {}\n  # podAnnotations: {}\n\n  ## Redis slave pod Security Context\n  # securityContext:\n  #   enabled: true\n  #   fsGroup: 1001\n  #   runAsUser: 1001\n\n## Prometheus Exporter / Metrics\n##\nmetrics:\n  enabled: false\n\n  image:\n    registry: docker.io\n    repository: oliver006/redis_exporter\n    tag: v0.20.2\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ##\n    # pullSecrets:\n    #   - myRegistrKeySecretName\n\n  service:\n    type: ClusterIP\n    ## Use serviceLoadBalancerIP to request a specific static IP,\n    ## otherwise leave blank\n    # loadBalancerIP:\n    annotations:\n      prometheus.io/scrape: \"true\"\n      prometheus.io/port: \"9121\"\n\n  ## Metrics exporter resource requests and limits\n  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n  ##\n  # resources: {}\n\n  ## Extra arguments for Metrics exporter, for example:\n  ## extraArgs:\n  ##   check-keys: myKey,myOtherKey\n  # extraArgs: {}\n\n  ## Metrics exporter labels and tolerations for pod assignment\n  # nodeSelector: {\"beta.kubernetes.io/arch\": \"amd64\"}\n  # tolerations: []\n\n  ## Metrics exporter pod Annotation and Labels\n  # podAnnotations: {}\n  # podLabels: {}\n\n  # Enable this if you're using https://github.com/coreos/prometheus-operator\n  serviceMonitor:\n    enabled: false\n    namespace: monitoring\n    # fallback to the prometheus default unless specified\n    # interval: 10s\n    ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)\n    ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)\n    ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)\n    selector:\n      prometheus: kube-prometheus\n\n##\n## Init containers parameters:\n## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup\n##\nvolumePermissions:\n  image:\n    registry: docker.io\n    repository: bitnami/minideb\n    tag: latest\n    pullPolicy: IfNotPresent\n\n## Redis config file\n## ref: https://redis.io/topics/config\n##\nconfigmap: |-\n  # maxmemory-policy volatile-lru\n",
    "releaseName": "redis",
    "helmValuesDefaults": "## Global Docker image registry\n## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value\n##\n# global:\n#   imageRegistry:\n\n## Bitnami Redis image version\n## ref: https://hub.docker.com/r/bitnami/redis/tags/\n##\nimage:\n  registry: docker.io\n  repository: bitnami/redis\n  ## Bitnami Redis image tag\n  ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links\n  ##\n  tag: 4.0.11\n  ## Specify a imagePullPolicy\n  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: Always\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  # pullSecrets:\n  #   - myRegistrKeySecretName\n\n## Cluster settings\ncluster:\n  enabled: true\n  slaveCount: 1\n\nnetworkPolicy:\n  ## Specifies whether a NetworkPolicy should be created\n  ##\n  enabled: false\n\n  ## The Policy model to apply. When set to false, only pods with the correct\n  ## client label will have network access to the port Redis is listening\n  ## on. When true, Redis will accept connections from any source\n  ## (with the correct destination port).\n  ##\n  # allowExternal: true\n\nserviceAccount:\n  ## Specifies whether a ServiceAccount should be created\n  ##\n  create: false\n  ## The name of the ServiceAccount to use.\n  ## If not set and create is true, a name is generated using the fullname template\n  name:\n\nrbac:\n  ## Specifies whether RBAC resources should be created\n  ##\n  create: false\n\n  role:\n    ## Rules to create. It follows the role specification\n    # rules:\n    #  - apiGroups:\n    #    - extensions\n    #    resources:\n    #      - podsecuritypolicies\n    #    verbs:\n    #      - use\n    #    resourceNames:\n    #      - gce.unprivileged\n    rules: []\n\n## Use password authentication\nusePassword: true\n## Redis password (both master and slave)\n## Defaults to a random 10-character alphanumeric string if not set and usePassword is true\n## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run\n##\npassword:\n## Use existing secret (ignores previous password)\n# existingSecret:\n\n## Persist data to a persistent volume\npersistence: {}\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  # existingClaim:\n\n##\n## Redis Master parameters\n##\nmaster:\n  ## Redis port\n  port: 6379\n  ## Redis command arguments\n  ##\n  ## Can be used to specify command line arguments, for example:\n  ##\n  command:\n  - \"/run.sh\"\n  ## Redis additional command line flags\n  ##\n  ## Can be used to specify command line flags, for example:\n  ##\n  ## extraFlags:\n  ##  - \"--maxmemory-policy volatile-ttl\"\n  ##  - \"--repl-backlog-size 1024mb\"\n  extraFlags: []\n  ## Comma-separated list of Redis commands to disable\n  ##\n  ## Can be used to disable Redis commands for security reasons.\n  ## Commands will be completely disabled by renaming each to an empty string.\n  ## ref: https://redis.io/topics/security#disabling-of-specific-commands\n  ##\n  disableCommands:\n  - FLUSHDB\n  - FLUSHALL\n\n  ## Redis Master additional pod labels and annotations\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  podLabels: {}\n  podAnnotations: {}\n\n  ## Redis Master resource requests and limits\n  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n  # resources:\n  #   requests:\n  #     memory: 256Mi\n  #     cpu: 100m\n  ## Use an alternate scheduler, e.g. \"stork\".\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  # schedulerName:\n\n  ## Configure extra options for Redis Master liveness and readiness probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 5\n    timeoutSeconds: 5\n    successThreshold: 1\n    failureThreshold: 5\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 5\n    timeoutSeconds: 1\n    successThreshold: 1\n    failureThreshold: 5\n\n  ## Redis Master Node selectors and tolerations for pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature\n  ##\n  # nodeSelector: {\"beta.kubernetes.io/arch\": \"amd64\"}\n  # tolerations: []\n  ## Redis Master pod/node affinity/anti-affinity\n  ##\n  affinity: {}\n\n  ## Redis Master Service properties\n  service:\n    ##  Redis Master Service type\n    type: ClusterIP\n    port: 6379\n\n    ## Specify the nodePort value for the LoadBalancer and NodePort service types.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n    ##\n    # nodePort:\n\n    ## Provide any additional annotations which may be required. This can be used to\n    ## set the LoadBalancer service type to internal only.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n    ##\n    annotations: {}\n    loadBalancerIP:\n\n  ## Redis Master Pod Security Context\n  securityContext:\n    enabled: true\n    fsGroup: 1001\n    runAsUser: 1001\n\n  ## Enable persistence using Persistent Volume Claims\n  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n  ##\n  persistence:\n    enabled: true\n    ## The path the volume will be mounted at, useful when using different\n    ## Redis images.\n    path: /data\n    ## The subdirectory of the volume to mount to, useful in dev environments\n    ## and one PV for multiple services.\n    subPath: \"\"\n    ## redis data Persistent Volume Storage Class\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n    ##   GKE, AWS \u0026 OpenStack)\n    ##\n    # storageClass: \"-\"\n    accessModes:\n    - ReadWriteOnce\n    size: 8Gi\n\n  ## Update strategy, can be set to RollingUpdate or onDelete by default.\n  ## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets\n  statefulset:\n    updateStrategy: RollingUpdate\n    ## Partition update strategy\n    ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions\n    # rollingUpdatePartition:\n\n\n##\n## Redis Slave properties\n## Note: service.type is a mandatory parameter\n## The rest of the parameters are either optional or, if undefined, will inherit those declared in Redis Master\n##\nslave:\n  ## Slave Service properties\n  service:\n    ## Redis Slave Service type\n    type: ClusterIP\n    ## Specify the nodePort value for the LoadBalancer and NodePort service types.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n    ##\n    # nodePort:\n\n    ## Provide any additional annotations which may be required. This can be used to\n    ## set the LoadBalancer service type to internal only.\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n    ##\n    annotations: {}\n    loadBalancerIP:\n\n  ## Redis port\n  # port: 6379\n  ## Redis extra flags\n  # extraFlags: []\n  ## List of Redis commands to disable\n  # disableCommands: []\n\n  ## Redis Slave pod/node affinity/anti-affinity\n  ##\n  affinity: {}\n\n  ## Configure extra options for Redis Slave liveness and readiness probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\n  ##\n  # livenessProbe:\n  #   enabled: true\n  #   initialDelaySeconds: 30\n  #   periodSeconds: 10\n  #   timeoutSeconds: 5\n  #   successThreshold: 1\n  #   failureThreshold: 5\n  # readinessProbe:\n  #   enabled: true\n  #   initialDelaySeconds: 5\n  #   periodSeconds: 10\n  #   timeoutSeconds: 10\n  #   successThreshold: 1\n  #   failureThreshold: 5\n\n  ## Redis slave Resource\n  # resources:\n  #   requests:\n  #     memory: 256Mi\n  #     cpu: 100m\n\n  ## Redis slave selectors and tolerations for pod assignment\n  # nodeSelector: {\"beta.kubernetes.io/arch\": \"amd64\"}\n  # tolerations: []\n\n  ## Use an alternate scheduler, e.g. \"stork\".\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  # schedulerName:\n\n  ## Redis slave pod Annotation and Labels\n  # podLabels: {}\n  # podAnnotations: {}\n\n  ## Redis slave pod Security Context\n  # securityContext:\n  #   enabled: true\n  #   fsGroup: 1001\n  #   runAsUser: 1001\n\n## Prometheus Exporter / Metrics\n##\nmetrics:\n  enabled: false\n\n  image:\n    registry: docker.io\n    repository: oliver006/redis_exporter\n    tag: v0.20.2\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ##\n    # pullSecrets:\n    #   - myRegistrKeySecretName\n\n  service:\n    type: ClusterIP\n    ## Use serviceLoadBalancerIP to request a specific static IP,\n    ## otherwise leave blank\n    # loadBalancerIP:\n    annotations:\n      prometheus.io/scrape: \"true\"\n      prometheus.io/port: \"9121\"\n\n  ## Metrics exporter resource requests and limits\n  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n  ##\n  # resources: {}\n\n  ## Extra arguments for Metrics exporter, for example:\n  ## extraArgs:\n  ##   check-keys: myKey,myOtherKey\n  # extraArgs: {}\n\n  ## Metrics exporter labels and tolerations for pod assignment\n  # nodeSelector: {\"beta.kubernetes.io/arch\": \"amd64\"}\n  # tolerations: []\n\n  ## Metrics exporter pod Annotation and Labels\n  # podAnnotations: {}\n  # podLabels: {}\n\n  # Enable this if you're using https://github.com/coreos/prometheus-operator\n  serviceMonitor:\n    enabled: false\n    namespace: monitoring\n    # fallback to the prometheus default unless specified\n    # interval: 10s\n    ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)\n    ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)\n    ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)\n    selector:\n      prometheus: kube-prometheus\n\n##\n## Init containers parameters:\n## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup\n##\nvolumePermissions:\n  image:\n    registry: docker.io\n    repository: bitnami/minideb\n    tag: latest\n    pullPolicy: IfNotPresent\n\n## Redis config file\n## ref: https://redis.io/topics/config\n##\nconfigmap: |-\n  # maxmemory-policy volatile-lru\n",
    "kustomize": {
      "overlays": {
        "ship": {
          "patches": {
            "/Deployment-redis-slave.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    app: redis\n    chart: redis-5.0.0\n    heritage: Tiller\n    release: redis\n  name: redis-slave\nspec:\n  template:\n    metadata:\n      annotations:\n        checksum/secret: FORKED_CHECKSUM\n    spec:\n      $setElementOrder/containers:\n      - name: redis\n      containers:\n      - livenessProbe:\n          failureThreshold: HI_IM_FORKED\n        name: redis\n",
            "/Secret-redis.yaml": "apiVersion: v1\ndata:\n  redis-password: IM_A_PASSWORD\nkind: Secret\nmetadata:\n  labels:\n    app: redis\n    chart: redis-5.0.0\n    heritage: Tiller\n    release: redis\n  name: redis\n",
            "/StatefulSet-redis-master.yaml": "apiVersion: apps/v1beta2\nkind: StatefulSet\nmetadata:\n  labels:\n    app: redis\n    chart: redis-5.0.0\n    heritage: Tiller\n    release: redis\n  name: redis-master\nspec:\n  template:\n    metadata:\n      annotations:\n        checksum/secret: 7d8062c935157159cd0e3392280371c8cca1f35ccc16548d3f806c4ce09764ee\n    spec:\n      $setElementOrder/initContainers:\n      - name: volume-permissions\n      initContainers:\n      - imagePullPolicy: HELLO_IM_FORKED\n        name: volume-permissions\n"
          }
        }
      }
    },
    "upstream": "https://github.com/helm/charts/tree/b57cf383eb116f68dba938ce9c12ebc758b5a1f7/stable/redis",
    "metadata": {
      "applicationType": "helm",
      "icon": "https://bitnami.com/assets/stacks/redis/img/redis-stack-220x234.png",
      "name": "redis",
      "releaseNotes": "[stable/redis] support redis docker library image (#7745)\n\n* refactor(stable/redis): support redis docker library image\n\nBREAKING CHANGES:\n- `master.args` and `slave.args` are removed. Use `master.command` or\n  `slave.command` instead in order to override the image entrypoint,\n   or `master.extraFlags` to pass additional flags to `redis-server`.\n- `disableCommands` is now interpreted as an array of strings instead\n   of a string of comma separated values.\n- `master.persistence.path` now defaults to `/data`.\n\nSigned-off-by: Jacob LeGrone \u003cgit@jacob.work\u003e\n\n* test(stable/redis): add ci values for base images \u0026 configurations\n\nSigned-off-by: Jacob LeGrone \u003cgit@jacob.work\u003e",
      "version": "5.0.0"
    },
    "contentSHA": "da92015f05122621bc1e35a7f36d183c697c76f770afca76a8679342c9771179"
  }
}