apiVersion: v1
data:
  ping_local.sh: |-
    response=$(
      redis-cli \
        -a $REDIS_PASSWORD \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_local.sh" || exit_status=$?
    "$script_dir/ping_master.sh" || exit_status=$?
    exit $exit_status
  ping_master.sh: |-
    response=$(
      redis-cli \
        -a $REDIS_MASTER_PASSWORD \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
kind: ConfigMap
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis-health
---
apiVersion: v1
data:
  master.conf: |-
    dir /data
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
  redis.conf: |-
    # User-supplied configuration:
    # maxmemory-policy volatile-lru
  replica.conf: |-
    dir /data
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
kind: ConfigMap
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis
---
apiVersion: v1
data:
  redis-password: IM_A_PASSWORD
kind: Secret
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis-master
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: redis
    role: master
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis-slave
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: redis
    role: slave
  type: ClusterIP
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis-master
spec:
  selector:
    matchLabels:
      app: redis
      release: redis
      role: master
  serviceName: redis-master
  template:
    metadata:
      annotations:
        checksum/configmap: 23853843a059c57c5633a34ba022f8145d1401d7b00dc5945ead28cf322e18df
        checksum/health: a70f637bcac29808c7ba9227b633914ef262bc8a0358bd4e7aeab02ba1ac8ea2
        checksum/secret: 7d8062c935157159cd0e3392280371c8cca1f35ccc16548d3f806c4ce09764ee
      labels:
        app: redis
        chart: redis-5.0.0
        release: redis
        role: master
    spec:
      containers:
      - args:
        - --port
        - $(REDIS_PORT)
        - --requirepass
        - $(REDIS_PASSWORD)
        - --include
        - /opt/bitnami/redis/etc/redis.conf
        - --include
        - /opt/bitnami/redis/etc/master.conf
        command:
        - /run.sh
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: redis
        - name: REDIS_PORT
          value: "6379"
        image: docker.io/bitnami/redis:4.0.11
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_local.sh
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_local.sh
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: null
        volumeMounts:
        - mountPath: /health
          name: health
        - mountPath: /data
          name: redis-data
          subPath: null
        - mountPath: /opt/bitnami/redis/etc
          name: config
      initContainers:
      - command:
        - /bin/chown
        - -R
        - 1001:1001
        - /data
        image: docker.io/bitnami/minideb:latest
        imagePullPolicy: HELLO_IM_FORKED
        name: volume-permissions
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /data
          name: redis-data
          subPath: null
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - configMap:
          defaultMode: 493
          name: redis-health
        name: health
      - configMap:
          name: redis
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app: redis
        component: master
        heritage: Tiller
        release: redis
      name: redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: redis
    chart: redis-5.0.0
    heritage: Tiller
    release: redis
  name: redis-slave
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      release: redis
      role: slave
  template:
    metadata:
      annotations:
        checksum/configmap: 23853843a059c57c5633a34ba022f8145d1401d7b00dc5945ead28cf322e18df
        checksum/health: a70f637bcac29808c7ba9227b633914ef262bc8a0358bd4e7aeab02ba1ac8ea2
        checksum/secret: FORKED_CHECKSUM
      labels:
        app: redis
        chart: redis-5.0.0
        release: redis
        role: slave
    spec:
      containers:
      - args:
        - --port
        - $(REDIS_PORT)
        - --slaveof
        - $(REDIS_MASTER_HOST)
        - $(REDIS_MASTER_PORT_NUMBER)
        - --requirepass
        - $(REDIS_PASSWORD)
        - --masterauth
        - $(REDIS_MASTER_PASSWORD)
        - --include
        - /opt/bitnami/redis/etc/redis.conf
        - --include
        - /opt/bitnami/redis/etc/replica.conf
        command:
        - /run.sh
        env:
        - name: REDIS_REPLICATION_MODE
          value: slave
        - name: REDIS_MASTER_HOST
          value: redis-master
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_MASTER_PORT_NUMBER
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: redis
        - name: REDIS_MASTER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: redis
        image: docker.io/bitnami/redis:4.0.11
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_local_and_master.sh
          failureThreshold: HI_IM_FORKED
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_local_and_master.sh
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: null
        volumeMounts:
        - mountPath: /health
          name: health
        - mountPath: /data
          name: redis-data
        - mountPath: /opt/bitnami/redis/etc
          name: config
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - configMap:
          defaultMode: 493
          name: redis-health
        name: health
      - configMap:
          name: redis
        name: config
      - emptyDir: {}
        name: redis-data
