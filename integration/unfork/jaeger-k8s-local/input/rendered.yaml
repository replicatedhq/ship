apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: jaeger
      jaeger-infra: collector-deployment
    name: jaeger-collector
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "14268"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: collector-pod
      spec:
        containers:
        - args:
          - --config-file=/conf/collector.yaml
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                key: span-storage-type
                name: jaeger-configuration
          image: jaegertracing/jaeger-collector:1.6.0
          name: jaeger-collector
          ports:
          - containerPort: 14267
            protocol: TCP
          - containerPort: FORKED_PORT
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14269
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        volumes:
        - configMap:
            items:
            - key: collector
              path: collector.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: collector-service
    name: jaeger-collector
  spec:
    ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: zipkin-service
    name: zipkin
  spec:
    ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: FORKED_TYPE
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-deployment
    name: jaeger-query
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "16686"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: query-pod
      spec:
        containers:
        - args:
          - --config-file=/conf/query.yaml
          env:
          - name: FORKED_ENV
            valueFrom:
              configMapKeyRef:
                key: span-storage-type
                name: jaeger-configuration
          image: jaegertracing/jaeger-query:1.6.0
          name: jaeger-query
          ports:
          - containerPort: 16686
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 16687
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        volumes:
        - configMap:
            items:
            - key: query
              path: query.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-service
    name: jaeger-query
  spec:
    ports:
    - name: jaeger-query
      port: 80
      protocol: TCP
      targetPort: 16686
    selector:
      jaeger-infra: query-pod
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
      app: jaeger
      jaeger-infra: agent-daemonset
    name: jaeger-agent
  spec:
    template:
      metadata:
        annotations:
          prometheus.io/port: "5778"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: agent-instance
      spec:
        containers:
        - args:
          - --config-file=/conf/agent.yaml
          image: jaegertracing/jaeger-agent:1.6.0
          name: agent-instance
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        volumes:
        - configMap:
            items:
            - key: agent
              path: agent.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
