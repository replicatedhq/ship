{
  "v1": {
    "config": {},
    "helmValues": "#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: true\n\n#\n# mixer configuration\n#\nmixer:\n  enabled: true\n\n#\n# pilot configuration\n#\npilot:\n  enabled: true\n\n#\n# security configuration\n#\nsecurity:\n  enabled: true\n\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n\n#\n# ingress configuration\n#\ningress:\n  enabled: false\n\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: false\n\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: true\n\n#\n# addon servicegraph configuration\n#\nservicegraph:\n  enabled: false\n\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: false\n\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: master-latest-daily\n\n  k8sIngress:\n    enabled: false\n    # Gateway used for legacy k8s Ingress resources. By default it is\n    # using 'istio:ingress', to match 0.8 config. It requires that\n    # ingress.enabled is set to true. You can also set it\n    # to ingressgateway, or any other gateway you define in the 'gateway'\n    # section.\n    gatewayName: ingress\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n\n  proxy:\n    image: proxyv2\n\n    # DNS domain suffix for pilot proxy agent. Default value is \"${POD_NAMESPACE}.svc.cluster.local\".\n    proxyDomain: \"\"\n\n    # DNS domain suffix for pilot proxy discovery. Default value is \"cluster.local\".\n    discoveryDomain: \"\"\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 10m\n      #  memory: 128Mi\n      # limits:\n      #   cpu: 100m\n      #   memory: 128Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0 (default), then start worker thread for each CPU thread/core.\n    concurrency: 0\n\n    # Configures the access log for each sidecar. Setting it to an empty string will\n    # disable access log for sidecar.\n    accessLogFile: \"/dev/stdout\"\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: # example: statsd-svc\n      port: # example: 9125\n\n    # This controls the stats collection for proxies. To disable stats\n    # collection, set the prometheusPort to 0.\n    stats:\n      prometheusPort: 15090\n\n    # Specify which tracer to use. One of: lightstep, zipkin\n    tracer: \"zipkin\"\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n  # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n  sdsEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"                # example: lightstep-satellite:443\n      accessToken: \"\"            # example: abcdefg1234567\n      secure: true               # example: true|false\n      cacertPath: \"\"             # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n\n  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace\n  # to use for pulling any images in pods that reference this ServiceAccount.\n  # For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)\n  # ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.\n  # Must be set for any clustser configured with private docker registry.\n  imagePullSecrets:\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  #podDNSConfig:\n  #  dnsConfig:\n  #    searches: #some dummy examples\n  #    - foo.bar.baz\n  #    - {{ \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]]\" }}.bazoo\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plain text pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n\n  multiCluster:\n    # Set to true to connect two kubernetes clusters using a LB gateway as\n    # the only entry point into the cluster (instead of requiring pod to\n    # pod connectivity across two clusters). Note that for this system to\n    # work, service objects from remote clusters have to be replicated to\n    # local cluster (without the pod selectors). In addition, service\n    # entries have to be added for each replicated service object, where\n    # the endpoints in the service entry point to the remote cluster's\n    # mcgatewayIP:15443. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    connectUsingGateway: false\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Include the crd definition when generating the template.\n  # For 'helm template' and helm install \u003e 2.10 it should be true.\n  # For helm \u003c 2.9, crds must be installed ahead of time with\n  # 'kubectl apply -f install/kubernetes/helm/istio/templates/crds.yaml\n  # and this options must be set off.\n  crds: true\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: false\n",
    "releaseName": "istio",
    "helmValuesDefaults": "#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: true\n\n#\n# mixer configuration\n#\nmixer:\n  enabled: true\n\n#\n# pilot configuration\n#\npilot:\n  enabled: true\n\n#\n# security configuration\n#\nsecurity:\n  enabled: true\n\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n\n#\n# ingress configuration\n#\ningress:\n  enabled: false\n\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: false\n\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: true\n\n#\n# addon servicegraph configuration\n#\nservicegraph:\n  enabled: false\n\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: false\n\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: master-latest-daily\n\n  k8sIngress:\n    enabled: false\n    # Gateway used for legacy k8s Ingress resources. By default it is\n    # using 'istio:ingress', to match 0.8 config. It requires that\n    # ingress.enabled is set to true. You can also set it\n    # to ingressgateway, or any other gateway you define in the 'gateway'\n    # section.\n    gatewayName: ingress\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n\n  proxy:\n    image: proxyv2\n\n    # DNS domain suffix for pilot proxy agent. Default value is \"${POD_NAMESPACE}.svc.cluster.local\".\n    proxyDomain: \"\"\n\n    # DNS domain suffix for pilot proxy discovery. Default value is \"cluster.local\".\n    discoveryDomain: \"\"\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 10m\n      #  memory: 128Mi\n      # limits:\n      #   cpu: 100m\n      #   memory: 128Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0 (default), then start worker thread for each CPU thread/core.\n    concurrency: 0\n\n    # Configures the access log for each sidecar. Setting it to an empty string will\n    # disable access log for sidecar.\n    accessLogFile: \"/dev/stdout\"\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: # example: statsd-svc\n      port: # example: 9125\n\n    # This controls the stats collection for proxies. To disable stats\n    # collection, set the prometheusPort to 0.\n    stats:\n      prometheusPort: 15090\n\n    # Specify which tracer to use. One of: lightstep, zipkin\n    tracer: \"zipkin\"\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n  # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n  sdsEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"                # example: lightstep-satellite:443\n      accessToken: \"\"            # example: abcdefg1234567\n      secure: true               # example: true|false\n      cacertPath: \"\"             # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n\n  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace\n  # to use for pulling any images in pods that reference this ServiceAccount.\n  # For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)\n  # ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.\n  # Must be set for any clustser configured with private docker registry.\n  imagePullSecrets:\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  #podDNSConfig:\n  #  dnsConfig:\n  #    searches: #some dummy examples\n  #    - foo.bar.baz\n  #    - {{ \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]]\" }}.bazoo\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plain text pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n\n  multiCluster:\n    # Set to true to connect two kubernetes clusters using a LB gateway as\n    # the only entry point into the cluster (instead of requiring pod to\n    # pod connectivity across two clusters). Note that for this system to\n    # work, service objects from remote clusters have to be replicated to\n    # local cluster (without the pod selectors). In addition, service\n    # entries have to be added for each replicated service object, where\n    # the endpoints in the service entry point to the remote cluster's\n    # mcgatewayIP:15443. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    connectUsingGateway: false\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Include the crd definition when generating the template.\n  # For 'helm template' and helm install \u003e 2.10 it should be true.\n  # For helm \u003c 2.9, crds must be installed ahead of time with\n  # 'kubectl apply -f install/kubernetes/helm/istio/templates/crds.yaml\n  # and this options must be set off.\n  crds: true\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: false\n",
    "upstream": "https://github.com/istio/istio/tree/d3eed9a347ad02f0b79e3f92330878f88953cf64/install/kubernetes/helm/istio",
    "metadata": {
      "applicationType": "helm",
      "icon": "https://istio.io/favicons/android-192x192.png",
      "name": "istio",
      "releaseNotes": "Add support for configuring LightStep as a tracing backend (#9270)\n\n* Add LightStep configuration\r\n\r\n- Validate LightStep ProxyConfig options\r\n- Clean up formatting of envoy_bootstrap\r\n by using a single indentation scheme\r\n- Update bootstrap golden files and add new ones for tracing\r\n- Update bootstrap tests to check new tracing options\r\n\r\n* Add root cacert.pem into proxy containers\r\n\r\n* Update bootstrap config test\r\n\r\n* Update golden files\r\n\r\n* Move tracer configuration up a level (replacing old one)\r\n\r\n* Remove lightstep as default proxy tracer\r\n\r\n* Set default proxy.tracer to zipkin\r\n\r\n* Make fixes to yaml\r\n\r\n- Make istio-remote configmap set the same default zipkin\r\n  address as istio configmap\r\n- Explicitly check that tracer == \"zipkin\" instead of always\r\n  defaulting to it\r\n\r\n* Replace check for global.remoteZipkinAddress with global.proxy.tracer\r\n\r\n* Enable mounting a custom cacert file\r\n\r\n* Remove default cacert.pem\r\n\r\n* Fix issues after rebase",
      "version": "1.1.0"
    },
    "contentSHA": "16a7051c27c8d6dd2d9eedf7d827322381c08f410a2189a256cf2970caea3dba"
  }
}