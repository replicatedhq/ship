apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: cassandra-service
      name: jaeger-cassandra-service
    name: cassandra
  spec:
    clusterIP: None
    ports:
    - name: intra-node
      port: 7000
    - name: tls-intra-node
      port: 7001
    - name: jmx
      port: 7199
    - name: cql
      port: 9042
    - name: thrift
      port: 9160
    selector:
      app: cassandra
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      app: jaeger
      jaeger-infra: cassandra-statefulset
    name: cassandra
  spec:
    replicas: 3
    serviceName: cassandra
    template:
      metadata:
        labels:
          app: cassandra
          jaeger-infra: cassandra-replica
      spec:
        containers:
        - command:
          - /docker-entrypoint.sh
          - -R
          env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CASSANDRA_CLUSTER_NAME
            value: jaeger
          - name: CASSANDRA_DC
            value: dc1
          - name: CASSANDRA_RACK
            value: rack1
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch
          - name: CASSANDRA_SEEDS
            value: cassandra-0.cassandra
          image: cassandra:3.11
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nodetool drain
          name: cassandra
          ports:
          - containerPort: 7000
            name: intra-node
          - containerPort: 7001
            name: tls-intra-node
          - containerPort: 7199
            name: jmx
          - containerPort: 9042
            name: cql
          - containerPort: 9160
            name: thrift
          volumeMounts:
          - mountPath: /var/lib/cassandra
            name: cassandra-data
          - mountPath: /var/log/cassandra
            name: cassandra-logs
        terminationGracePeriodSeconds: 1800
        volumes:
        - emptyDir: {}
          name: cassandra-data
        - emptyDir: {}
          name: cassandra-logs
- apiVersion: batch/v1
  kind: Job
  metadata:
    labels:
      app: jaeger
      jaeger-infra: cassandra-schema-job
    name: jaeger-cassandra-schema-job
  spec:
    activeDeadlineSeconds: 120
    template:
      metadata:
        name: cassandra-schema
      spec:
        containers:
        - env:
          - name: MODE
            value: prod
          - name: DATACENTER
            value: dc1
          image: jaegertracing/jaeger-cassandra-schema:1.6.0
          name: jaeger-cassandra-schema
        restartPolicy: OnFailure
---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: jaeger
      jaeger-infra: collector-deployment
    name: jaeger-collector
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "14268"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: collector-pod
      spec:
        containers:
        - args:
          - --config-file=/conf/collector.yaml
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                key: span-storage-type
                name: jaeger-configuration
          image: jaegertracing/jaeger-collector:1.7.0
          name: jaeger-collector
          ports:
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14269
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        volumes:
        - configMap:
            items:
            - key: collector
              path: collector.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: collector-service
    name: jaeger-collector
  spec:
    ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: zipkin-service
    name: zipkin
  spec:
    ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-deployment
    name: jaeger-query
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "16686"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: query-pod
      spec:
        containers:
        - args:
          - --config-file=/conf/query.yaml
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                key: span-storage-type
                name: jaeger-configuration
          image: jaegertracing/jaeger-query:1.7.0
          name: jaeger-query
          ports:
          - containerPort: 16686
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 16687
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        volumes:
        - configMap:
            items:
            - key: query
              path: query.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jaeger
      jaeger-infra: query-service
    name: jaeger-query
  spec:
    ports:
    - name: jaeger-query
      port: 80
      protocol: TCP
      targetPort: 16686
    selector:
      jaeger-infra: query-pod
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
      app: jaeger
      jaeger-infra: agent-daemonset
    name: jaeger-agent
  spec:
    template:
      metadata:
        annotations:
          prometheus.io/port: "5778"
          prometheus.io/scrape: "true"
        labels:
          app: jaeger
          jaeger-infra: agent-instance
      spec:
        containers:
        - args:
          - --config-file=/conf/agent.yaml
          image: jaegertracing/jaeger-agent:1.7.0
          name: agent-instance
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          volumeMounts:
          - mountPath: /conf
            name: jaeger-configuration-volume
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        volumes:
        - configMap:
            items:
            - key: agent
              path: agent.yaml
            name: jaeger-configuration
          name: jaeger-configuration-volume
