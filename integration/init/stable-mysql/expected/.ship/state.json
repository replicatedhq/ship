{
  "v1": {
    "config": {},
    "helmValues": "## mysql image version\n## ref: https://hub.docker.com/r/library/mysql/tags/\n##\nimage: \"mysql\"\nimageTag: \"5.7.14\"\n\n## Specify password for root user\n##\n## Default: random 10 character string\n# mysqlRootPassword: testing\n\n## Create a database user\n##\n# mysqlUser:\n## Default: random 10 character string\n# mysqlPassword:\n\n## Allow unauthenticated access, uncomment to enable\n##\n# mysqlAllowEmptyPassword: true\n\n## Create a database\n##\n# mysqlDatabase:\n\n## Specify an imagePullPolicy (Required)\n## It's recommended to change this to 'Always' if the image tag is 'latest'\n## ref: http://kubernetes.io/docs/user-guide/images/#updating-images\n##\nimagePullPolicy: IfNotPresent\n\n# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod\n# imagePullSecrets:\n  # - name: myRegistryKeySecretName\n\n## Node selector\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\nnodeSelector: {}\n\nlivenessProbe:\n  initialDelaySeconds: 30\n  periodSeconds: 10\n  timeoutSeconds: 5\n  successThreshold: 1\n  failureThreshold: 3\n\nreadinessProbe:\n  initialDelaySeconds: 5\n  periodSeconds: 10\n  timeoutSeconds: 1\n  successThreshold: 1\n  failureThreshold: 3\n\n## Persist data to a persistent volume\npersistence:\n  enabled: true\n  ## database data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n  accessMode: ReadWriteOnce\n  size: 8Gi\n\n## Configure resource requests and limits\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n##\nresources:\n  requests:\n    memory: 256Mi\n    cpu: 100m\n\n# Custom mysql configuration files used to override default mysql settings\nconfigurationFiles:\n#  mysql.cnf: |-\n#    [mysqld]\n#    skip-name-resolve\n#    ssl-ca=/ssl/ca.pem\n#    ssl-cert=/ssl/server-cert.pem\n#    ssl-key=/ssl/server-key.pem\n\n# Custom mysql init SQL files used to initialize the database\ninitializationFiles:\n#  first-db.sql: |-\n#    CREATE DATABASE IF NOT EXISTS first DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\n#  second-db.sql: |-\n#    CREATE DATABASE IF NOT EXISTS second DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\n\nmetrics:\n  enabled: false\n  image: prom/mysqld-exporter\n  imageTag: v0.10.0\n  imagePullPolicy: IfNotPresent\n  resources: {}\n  annotations: {}\n    # prometheus.io/scrape: \"true\"\n    # prometheus.io/port: \"9104\"\n\n## Configure the service\n## ref: http://kubernetes.io/docs/user-guide/services/\nservice:\n  ## Specify a service type\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types\n  type: ClusterIP\n  port: 3306\n  # nodePort: 32000\n\nssl:\n  enabled: false\n  secret: mysql-ssl-certs\n  certificates:\n#  - name: mysql-ssl-certs\n#    ca: |-\n#      -----BEGIN CERTIFICATE-----\n#      ...\n#      -----END CERTIFICATE-----\n#    cert: |-\n#      -----BEGIN CERTIFICATE-----\n#      ...\n#      -----END CERTIFICATE-----\n#    key: |-\n#      -----BEGIN RSA PRIVATE KEY-----\n#      ...\n#      -----END RSA PRIVATE KEY-----\n",
    "helmValuesDefaults": "## mysql image version\n## ref: https://hub.docker.com/r/library/mysql/tags/\n##\nimage: \"mysql\"\nimageTag: \"5.7.14\"\n\n## Specify password for root user\n##\n## Default: random 10 character string\n# mysqlRootPassword: testing\n\n## Create a database user\n##\n# mysqlUser:\n## Default: random 10 character string\n# mysqlPassword:\n\n## Allow unauthenticated access, uncomment to enable\n##\n# mysqlAllowEmptyPassword: true\n\n## Create a database\n##\n# mysqlDatabase:\n\n## Specify an imagePullPolicy (Required)\n## It's recommended to change this to 'Always' if the image tag is 'latest'\n## ref: http://kubernetes.io/docs/user-guide/images/#updating-images\n##\nimagePullPolicy: IfNotPresent\n\n# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod\n# imagePullSecrets:\n  # - name: myRegistryKeySecretName\n\n## Node selector\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\nnodeSelector: {}\n\nlivenessProbe:\n  initialDelaySeconds: 30\n  periodSeconds: 10\n  timeoutSeconds: 5\n  successThreshold: 1\n  failureThreshold: 3\n\nreadinessProbe:\n  initialDelaySeconds: 5\n  periodSeconds: 10\n  timeoutSeconds: 1\n  successThreshold: 1\n  failureThreshold: 3\n\n## Persist data to a persistent volume\npersistence:\n  enabled: true\n  ## database data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n  accessMode: ReadWriteOnce\n  size: 8Gi\n\n## Configure resource requests and limits\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n##\nresources:\n  requests:\n    memory: 256Mi\n    cpu: 100m\n\n# Custom mysql configuration files used to override default mysql settings\nconfigurationFiles:\n#  mysql.cnf: |-\n#    [mysqld]\n#    skip-name-resolve\n#    ssl-ca=/ssl/ca.pem\n#    ssl-cert=/ssl/server-cert.pem\n#    ssl-key=/ssl/server-key.pem\n\n# Custom mysql init SQL files used to initialize the database\ninitializationFiles:\n#  first-db.sql: |-\n#    CREATE DATABASE IF NOT EXISTS first DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\n#  second-db.sql: |-\n#    CREATE DATABASE IF NOT EXISTS second DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\n\nmetrics:\n  enabled: false\n  image: prom/mysqld-exporter\n  imageTag: v0.10.0\n  imagePullPolicy: IfNotPresent\n  resources: {}\n  annotations: {}\n    # prometheus.io/scrape: \"true\"\n    # prometheus.io/port: \"9104\"\n\n## Configure the service\n## ref: http://kubernetes.io/docs/user-guide/services/\nservice:\n  ## Specify a service type\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types\n  type: ClusterIP\n  port: 3306\n  # nodePort: 32000\n\nssl:\n  enabled: false\n  secret: mysql-ssl-certs\n  certificates:\n#  - name: mysql-ssl-certs\n#    ca: |-\n#      -----BEGIN CERTIFICATE-----\n#      ...\n#      -----END CERTIFICATE-----\n#    cert: |-\n#      -----BEGIN CERTIFICATE-----\n#      ...\n#      -----END CERTIFICATE-----\n#    key: |-\n#      -----BEGIN RSA PRIVATE KEY-----\n#      ...\n#      -----END RSA PRIVATE KEY-----\n",
    "upstream": "https://github.com/helm/charts/tree/dabdba3b2843d82ac7f9c176cb21575626dd1680/stable/mysql",
    "contentSHA": "3bdb63246f711e7448732043059e9db984571e46e56aff9b0f3049528975fd00"
  }
}
