# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

experimental:
  notify:
    branches:
      only:
        - master

jobs:
  test:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - run: mkdir -p web/dist
      - run: |
          make build-deps citest
          if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
            make ci-upload-coverage
          fi
  build_dev_ui:
    docker:
    - image: circleci/node:9
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "web/package.json" }}
        - v1-dependencies-

    - run:
        name: build
        command: make ci-build-ui-dev

    - save_cache:
        paths:
        - web/node_modules
        key: v1-dependencies-{{ checksum "web/package.json" }}

  build_ui:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "web/package.json" }}
          - v1-dependencies-

      - run:
          name: build dev UI to ensure it compiles
          command: make build-ui

      - save_cache:
          paths:
            - web/node_modules
          key: v1-dependencies-{{ checksum "web/package.json" }}

      - persist_to_workspace:
          root: ~/repo/web
          paths:
            - dist

  test_ui:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "web/package.json" }}
          - v1-dependencies-
      - run:
          name: test
          command: make test_CI
      - save_cache:
          paths:
            - web/node_modules
          key: v1-dependencies-{{ checksum "web/package.json" }}

  integration:
    machine: true
    working_directory: /home/circleci/go/src/github.com/replicatedhq/ship
    environment:
      GOPATH: /home/circleci/go
      GO_SHA256SUM: fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035
      GO: /usr/local/go/bin/go
    steps:
      - checkout
      - run: |
          export GO_DOWNLOAD_URL=https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz
          export GOROOT=/usr/local/go
          export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
           # sudo apt update --fix-missing && apt upgrade -y
           # sudo apt install --no-install-recommends -y gcc

          wget "$GO_DOWNLOAD_URL" -O golang.tar.gz
          echo "${GO_SHA256SUM}  golang.tar.gz" | sha256sum -c -
          tar -zxvf golang.tar.gz -C /tmp
          sudo rm -rf ${GOROOT}
          sudo mv /tmp/go ${GOROOT}
      - run: $GO get github.com/onsi/ginkgo/ginkgo
      - run: $GO get github.com/docker/distribution/cmd/registry
      - run: cp $GOPATH/src/github.com/docker/distribution/cmd/registry/config-example.yml config.yml
      - run: sudo ./hack/get_run_deps.sh
      - run: sudo mkdir -p /var/lib/registry
      - run: |
          sudo $GOPATH/bin/registry serve config.yml > /dev/null 2>&1 &
          $GOPATH/bin/ginkgo -p -stream integration/base
          $GOPATH/bin/ginkgo -p -stream integration/update
          $GOPATH/bin/ginkgo -p -stream integration/init_app
          $GOPATH/bin/ginkgo -p -stream integration/init

  deploy_unstable:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /go/src/github.com/replicatedhq/ship/web
      - run: make build-deps ci-embed-ui
      - run: git diff pkg/lifecycle/daemon/ui.bindatafs.go | cat
      - run: docker pull alpine:latest # make sure it's fresh
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
              curl -sL https://git.io/goreleaser | bash -s -- --snapshot --config deploy/.goreleaser.unstable.yml
            fi
      - run: docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
              docker push replicated/ship:unstable
            fi

  deploy_integration:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - run: make build_ship_integration_test
      - run: docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
              docker push replicated/ship-e2e-test:latest
            fi

  deploy:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /go/src/github.com/replicatedhq/ship/web
      - run: make build-deps ci-embed-ui
      - run: git diff pkg/lifecycle/daemon/ui.bindatafs.go | cat
      - run: docker pull alpine:latest # make sure it's fresh
      - run: docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
              curl -sL https://git.io/goreleaser | bash -s -- --config deploy/.goreleaser.yml
            fi
      # todo drop a release-api message to bump a version in the DB

workflows:
  version: 2

  # unstable deploys the `unstable` tag to dockerhub, no releases to github (for now)
  unstable:
    jobs:
      - test_ui
      - integration
      - test

      # only run this on forks, to make sure webpack is compiling
      - build_dev_ui:
          filters:
            branches:
              ignore: /master/
      # build the prod UI on master builds
      - build_ui:
          filters:
            branches:
              only: /master/
      - deploy_unstable:
          requires:
          - test
          - integration
          - build_ui
          - test_ui
          filters:
            branches:
              only: /master/

      - deploy_integration:
          requires:
          - integration
          - deploy_unstable
          filters:
            branches:
              only: /master/

  # Stable deploys the `alpha` and `latest` tags to dockerhub and github
  stable:
    jobs:
      - build_ui:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - test_ui:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - integration:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - test:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
          - test
          - integration
          - build_ui
          - test_ui
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
