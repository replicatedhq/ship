# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

experimental:
  notify:
    branches:
      only:
        - master

jobs:
  test:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - run: |
          make build-deps citest
          if [ -n "$CC_TEST_REPORTER_ID" ]; then
            make ci-upload-coverage
          fi
  build_ui:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}-{{ checksum "web/app/yarn.lock" }}
            - yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}
            - yarn-packages-v1-

      - run:
          name: Build UI
          command: make build-ui

      - save_cache:
          paths:
            - ~/.cache/yarn
            - web/app/node_modules
            - web/init/node_modules
            - web/init/dist
            - web/app/build
          key: yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}-{{ checksum "web/app/yarn.lock" }}

      - persist_to_workspace:
          root: ~/repo/web/app
          paths:
            - build

  test_ui:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}
          - yarn-packages-v1-
      - run:
          name: test
          command: make test_CI
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: 'yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}'

  e2e-init:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}-{{ checksum "web/app/yarn.lock" }}
            - yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}
            - yarn-packages-v1-
      - run:
          name: Build UI
          command: make build-ui
      - run:
          name: Build Ship Cypress Docker Image
          command: docker build -t replicatedhq/ship-cypress:latest -f ./web/app/cypress/Dockerfile .
      - run:
          name: Run Ship Cypress Tests
          command: docker run -it replicatedhq/ship-cypress:latest
      - save_cache:
          paths:
            - ~/.cache/yarn
            - web/app/node_modules
            - web/init/node_modules
            - web/init/dist
            - web/app/build
          key: yarn-packages-v1-{{ checksum "web/init/yarn.lock" }}-{{ checksum "web/app/yarn.lock" }}

  integration:
    machine: true
    working_directory: /home/circleci/go/src/github.com/replicatedhq/ship
    environment:
      GOPATH: /home/circleci/go
      GO_SHA256SUM: fa04efdb17a275a0c6e137f969a1c4eb878939e91e1da16060ce42f02c2ec5ec
      GO: /usr/local/go/bin/go
    steps:
      - checkout
      - run: |
          export GO_DOWNLOAD_URL=https://dl.google.com/go/go1.10.4.linux-amd64.tar.gz
          export GOROOT=/usr/local/go
          export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
           # sudo apt update --fix-missing && apt upgrade -y
           # sudo apt install --no-install-recommends -y gcc

          wget "$GO_DOWNLOAD_URL" -O golang.tar.gz
          echo "${GO_SHA256SUM}  golang.tar.gz" | sha256sum -c -
          tar -zxvf golang.tar.gz -C /tmp
          sudo rm -rf ${GOROOT}
          sudo mv /tmp/go ${GOROOT}
      - run: $GO get github.com/onsi/ginkgo/ginkgo
      - run: $GO get github.com/docker/distribution/cmd/registry
      - run: sudo ./hack/get_run_deps.sh
      - run: sudo mkdir -p /var/lib/registry
      - run: |
          sudo $GOPATH/bin/registry serve integration/docker-registry.yaml > /dev/null 2>&1 &
          $GOPATH/bin/ginkgo -p -stream integration/base
          $GOPATH/bin/ginkgo -p -stream integration/update
          $GOPATH/bin/ginkgo -p -stream integration/init
          if [ -n "$SHIP_INTEGRATION_VENDOR_TOKEN" ]; then
            $GOPATH/bin/ginkgo -p -stream integration/init_app
          fi

  deploy_unstable:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /go/src/github.com/replicatedhq/ship/web/app
      - run: make build-deps ci-embed-ui
      - run: git diff pkg/lifecycle/daemon/ui.bindatafs.go | cat
      - run: docker pull alpine:latest # make sure it's fresh
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
              curl -sL https://git.io/goreleaser | bash -s -- --snapshot --config deploy/.goreleaser.unstable.yml
              docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
              docker push replicated/ship:alpha
            fi

  deploy_integration:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - run: make build_ship_integration_test
      - run: docker run -e SHIP_INTEGRATION_VENDOR_TOKEN --net="host" -it -v /var/run/docker.sock:/var/run/docker.sock replicated/ship-e2e-test:latest
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
              docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
              docker push replicated/ship-e2e-test:latest
            fi

  deploy:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /go/src/github.com/replicatedhq/ship/web/app
      - run: make build-deps ci-embed-ui
      - run: git diff pkg/lifecycle/daemon/ui.bindatafs.go | cat
      - run: docker pull alpine:latest # make sure it's fresh
      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "replicatedhq" ]; then
               docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
              curl -sL https://git.io/goreleaser | bash -s -- --config deploy/.goreleaser.yml
            fi
      # todo drop a release-api message to bump a version in the DB

workflows:
  version: 2

  # unstable deploys the `unstable` tag to dockerhub, no releases to github (for now)
  unstable:
    jobs:
      - test_ui
      - integration
      - test
      - e2e-init
      - build_ui
      - deploy_unstable:
          requires:
          - test
          - integration
          - build_ui
          - test_ui
          - e2e-init
          filters:
            branches:
              only: /master/
      - deploy_integration:
          requires:
          - integration
          - deploy_unstable
          filters:
            branches:
              only: /master/

  # Stable deploys the `alpha` and `latest` tags to dockerhub and github
  stable:
    jobs:
      - build_ui:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - test_ui:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - e2e-init:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - integration:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - test:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
          - test
          - integration
          - e2e-init
          - build_ui
          - test_ui
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
