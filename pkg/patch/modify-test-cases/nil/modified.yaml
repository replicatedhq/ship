apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: grafana
    chart: grafana-1.14.0
    heritage: Tiller
    release: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: grafana
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: admin-user
              name: grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: grafana
        image: grafana/grafana:5.2.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
        name: grafana
        ports:
        - containerPort: 80
          name: service
          protocol: TCP
        - containerPort: 3000
          name: grafana
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /etc/grafana/grafana.ini
          name: config
          subPath: grafana.ini
        - mountPath: TO_BE_MODIFIED
          name: ldap
          subPath: ldap.toml
        - mountPath: /var/lib/grafana
          name: storage
          subPath: null
      securityContext:
        fsGroup: 472
        runAsUser: 472
      serviceAccountName: grafana
      volumes:
      - configMap:
          name: grafana
        name: config
      - name: ldap
        secret:
          items:
          - key: ldap-toml
            path: ldap.toml
          secretName: grafana
      - emptyDir: {}
        name: storage
