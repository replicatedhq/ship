// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/replicatedhq/ship/pkg/util (interfaces: AssetUploader)

// Package util is a generated GoMock package.
package util

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAssetUploader is a mock of AssetUploader interface
type MockAssetUploader struct {
	ctrl     *gomock.Controller
	recorder *MockAssetUploaderMockRecorder
}

// MockAssetUploaderMockRecorder is the mock recorder for MockAssetUploader
type MockAssetUploaderMockRecorder struct {
	mock *MockAssetUploader
}

// NewMockAssetUploader creates a new mock instance
func NewMockAssetUploader(ctrl *gomock.Controller) *MockAssetUploader {
	mock := &MockAssetUploader{ctrl: ctrl}
	mock.recorder = &MockAssetUploaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAssetUploader) EXPECT() *MockAssetUploaderMockRecorder {
	return m.recorder
}

// UploadAssets mocks base method
func (m *MockAssetUploader) UploadAssets(arg0 string) error {
	ret := m.ctrl.Call(m, "UploadAssets", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadAssets indicates an expected call of UploadAssets
func (mr *MockAssetUploaderMockRecorder) UploadAssets(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadAssets", reflect.TypeOf((*MockAssetUploader)(nil).UploadAssets), arg0)
}
